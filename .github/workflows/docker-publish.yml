name: Integracao continua com github actions

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: login no docker hub
        uses: docker/login-action@v3.2.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Build Eureka Namaing server container
        working-directory: ./naming-server
        run: mvn spring-boot:build-image -DskipTests
      - name: Build Api-gateway container
        working-directory: ./api-gateway
        run: mvn spring-boot:build-image -DskipTests
      - name: Build pessoa jar
        working-directory: ./pessoa
        run: mvn clean package -DskipTests
      - name: Build book jar
        working-directory: ./book
        run: mvn clean package -DskipTests
      - name: Build cliente jar
        working-directory: ./cliente_microservicos
        run: mvn clean package -DskipTests
      - name: Build aluguel jar
        working-directory: ./aluguel
        run: mvn clean package -DskipTests
      - name: Build multa jar
        working-directory: ./multa
        run: mvn clean package -DskipTests
      - name: docker compose build 
        working-directory: .
        run: docker compose build
      - name: Push to Docker Hub Container Registry
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/naming-server:0.0.1-SNAPSHOT ${{ secrets.DOCKER_USERNAME }}/naming-server:${{github.run_id}}
          docker tag ${{ secrets.DOCKER_USERNAME }}/naming-server:0.0.1-SNAPSHOT ${{ secrets.DOCKER_USERNAME }}/naming-server:latest
          docker tag ${{ secrets.DOCKER_USERNAME }}/api-gateway:0.0.1-SNAPSHOT ${{ secrets.DOCKER_USERNAME }}/api-gateway:${{github.run_id}}
          docker tag ${{ secrets.DOCKER_USERNAME }}/api-gateway:0.0.1-SNAPSHOT ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest
          docker tag ${{ secrets.DOCKER_USERNAME }}/pessoa:latest ${{ secrets.DOCKER_USERNAME }}/pessoa:${{github.run_id}}
          docker tag ${{ secrets.DOCKER_USERNAME }}/book:latest ${{ secrets.DOCKER_USERNAME }}/book:${{github.run_id}}
          docker tag ${{ secrets.DOCKER_USERNAME }}/multa:latest ${{ secrets.DOCKER_USERNAME }}/multa:${{github.run_id}}
          docker tag ${{ secrets.DOCKER_USERNAME }}/clientes.springboot:latest ${{ secrets.DOCKER_USERNAME }}/clientes.springboot:${{github.run_id}}
          docker tag ${{ secrets.DOCKER_USERNAME }}/aluguel:latest ${{ secrets.DOCKER_USERNAME }}/aluguel:${{github.run_id}}
          docker push ${{ secrets.DOCKER_USERNAME }}/naming-server:${{github.run_id}}
          docker push ${{ secrets.DOCKER_USERNAME }}/naming-server:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway:${{github.run_id}}
          docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/pessoa:${{github.run_id}}
          docker push ${{ secrets.DOCKER_USERNAME }}/pessoa:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/book:${{github.run_id}}
          docker push ${{ secrets.DOCKER_USERNAME }}/book:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/multa:${{github.run_id}}
          docker push ${{ secrets.DOCKER_USERNAME }}/multa:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/clientes.springboot:${{github.run_id}}
          docker push ${{ secrets.DOCKER_USERNAME }}/clientes.springboot:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/aluguel:${{github.run_id}}
          docker push ${{ secrets.DOCKER_USERNAME }}/aluguel:latest
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the files
      uses: actions/checkout@v3

    - name: Copy files with SSH
      uses: easingthemes/ssh-deploy@main
      env:
        SSH_PRIVATE_KEY: ${{secrets.EC2_SSH_KEY}}
        ARGS: "-rltgoDzvO --delete"
        SOURCE: "./"
        REMOTE_HOST: ${{secrets.REMOTE_HOST}}
        REMOTE_USER: ${{secrets.REMOTE_USER}}
        TARGET: ${{secrets.TARGET_DIR}}
        EXCLUDE: "/dist/, /node_modules/, **.env, rebuild_app.sh, watcher.sh"
