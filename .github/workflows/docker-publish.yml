name: Integracao continua com github actions

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: login no docker hub
        uses: docker/login-action@v3.2.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Build Eureka Namaing server container
        working-directory: ./naming-server
        run: mvn spring-boot:build-image -DskipTests
      - name: Build Api-gateway container
        working-directory: ./api-gateway
        run: mvn spring-boot:build-image -DskipTests
      - name: Build pessoa jar
        working-directory: ./pessoa
        run: mvn clean package -DskipTests
      - name: Build book jar
        working-directory: ./book
        run: mvn clean package -DskipTests
      - name: Build cliente jar
        working-directory: ./cliente_microservicos
        run: mvn clean package -DskipTests
      - name: Build aluguel jar
        working-directory: ./aluguel
        run: mvn clean package -DskipTests
      - name: Build multa jar
        working-directory: ./multa
        run: mvn clean package -DskipTests
      - name: docker compose build 
        working-directory: .
        run: docker compose build
      - name: Push to Docker Hub Container Registry
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/naming-server:0.0.1-SNAPSHOT ${{ secrets.DOCKER_USERNAME }}/naming-server:${{github.run_id}}
          docker tag ${{ secrets.DOCKER_USERNAME }}/naming-server:0.0.1-SNAPSHOT ${{ secrets.DOCKER_USERNAME }}/naming-server:latest
          docker tag ${{ secrets.DOCKER_USERNAME }}/api-gateway:0.0.1-SNAPSHOT ${{ secrets.DOCKER_USERNAME }}/api-gateway:${{github.run_id}}
          docker tag ${{ secrets.DOCKER_USERNAME }}/api-gateway:0.0.1-SNAPSHOT ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest
          docker tag ${{ secrets.DOCKER_USERNAME }}/pessoa:latest ${{ secrets.DOCKER_USERNAME }}/pessoa:${{github.run_id}}
          docker tag ${{ secrets.DOCKER_USERNAME }}/book:latest ${{ secrets.DOCKER_USERNAME }}/book:${{github.run_id}}
          docker tag ${{ secrets.DOCKER_USERNAME }}/multa:latest ${{ secrets.DOCKER_USERNAME }}/multa:${{github.run_id}}
          docker tag ${{ secrets.DOCKER_USERNAME }}/clientes.springboot:latest ${{ secrets.DOCKER_USERNAME }}/clientes.springboot:${{github.run_id}}
          docker tag ${{ secrets.DOCKER_USERNAME }}/aluguel:latest ${{ secrets.DOCKER_USERNAME }}/aluguel:${{github.run_id}}
          docker push ${{ secrets.DOCKER_USERNAME }}/naming-server:${{github.run_id}}
          docker push ${{ secrets.DOCKER_USERNAME }}/naming-server:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway:${{github.run_id}}
          docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/pessoa:${{github.run_id}}
          docker push ${{ secrets.DOCKER_USERNAME }}/pessoa:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/book:${{github.run_id}}
          docker push ${{ secrets.DOCKER_USERNAME }}/book:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/multa:${{github.run_id}}
          docker push ${{ secrets.DOCKER_USERNAME }}/multa:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/clientes.springboot:${{github.run_id}}
          docker push ${{ secrets.DOCKER_USERNAME }}/clientes.springboot:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/aluguel:${{github.run_id}}
          docker push ${{ secrets.DOCKER_USERNAME }}/aluguel:latest
          
  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout do código
      uses: actions/checkout@v2

    - name: Deploy via SSH para localhost
      uses: appleboy/ssh-action@v0.1.2
      with:
        host: REMOTE_HOST
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Pull das imagens Docker
          docker pull ${{ secrets.DOCKER_USERNAME }}/naming-server:${{github.run_id}}
          docker pull ${{ secrets.DOCKER_USERNAME }}/api-gateway:${{github.run_id}}
          docker pull ${{ secrets.DOCKER_USERNAME }}/pessoa:${{github.run_id}}
          docker pull ${{ secrets.DOCKER_USERNAME }}/book:${{github.run_id}}
          docker pull ${{ secrets.DOCKER_USERNAME }}/multa:${{github.run_id}}
          docker pull ${{ secrets.DOCKER_USERNAME }}/clientes.springboot:${{github.run_id}}
          docker pull ${{ secrets.DOCKER_USERNAME }}/aluguel:${{github.run_id}}

          # Parar e remover contêineres existentes
          docker stop naming-server-container || true
          docker rm naming-server-container || true
          docker stop api-gateway-container || true
          docker rm api-gateway-container || true
          docker stop pessoa-container || true
          docker rm pessoa-container || true
          docker stop book-container || true
          docker rm book-container || true
          docker stop multa-container || true
          docker rm multa-container || true
          docker stop clientes.springboot-container || true
          docker rm clientes.springboot-container || true
          docker stop aluguel-container || true
          docker rm aluguel-container || true

          # Iniciar contêineres Docker
          docker run -d --name naming-server-container -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/naming-server:${{github.run_id}}
          docker run -d --name api-gateway-container -p 8081:8081 ${{ secrets.DOCKER_USERNAME }}/api-gateway:${{github.run_id}}
          docker run -d --name pessoa-container -p 8082:8082 ${{ secrets.DOCKER_USERNAME }}/pessoa:${{github.run_id}}
          docker run -d --name book-container -p 8083:8083 ${{ secrets.DOCKER_USERNAME }}/book:${{github.run_id}}
          docker run -d --name multa-container -p 8084:8084 ${{ secrets.DOCKER_USERNAME }}/multa:${{github.run_id}}
          docker run -d --name clientes.springboot-container -p 8085:8085 ${{ secrets.DOCKER_USERNAME }}/clientes.springboot:${{github.run_id}}
          docker run -d --name aluguel-container -p 8086:8086 ${{ secrets.DOCKER_USERNAME }}/aluguel:${{github.run_id}}



        
