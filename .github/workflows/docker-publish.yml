name: Integracao continua com github actions

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: login no docker hub
        uses: docker/login-action@v3.2.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Build Eureka Namaing server container
        working-directory: ./naming-server
        run: mvn spring-boot:build-image -DskipTests
      - name: Build Api-gateway container
        working-directory: ./api-gateway
        run: mvn spring-boot:build-image -DskipTests
      - name: Build pessoa jar
        working-directory: ./pessoa
        run: mvn clean package -DskipTests
      - name: Build book jar
        working-directory: ./book
        run: mvn clean package -DskipTests
      - name: Build cliente jar
        working-directory: ./cliente_microservicos
        run: mvn clean package -DskipTests
      - name: Build aluguel jar
        working-directory: ./aluguel
        run: mvn clean package -DskipTests
      - name: Build multa jar
        working-directory: ./multa
        run: mvn clean package -DskipTests
      - name: docker compose build 
        working-directory: .
        run: docker compose build
      - name: Push to Docker Hub Container Registry
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/naming-server:0.0.1-SNAPSHOT ${{ secrets.DOCKER_USERNAME }}/naming-server:${{github.run_id}}
          docker tag ${{ secrets.DOCKER_USERNAME }}/naming-server:0.0.1-SNAPSHOT ${{ secrets.DOCKER_USERNAME }}/naming-server:latest
          docker tag ${{ secrets.DOCKER_USERNAME }}/api-gateway:0.0.1-SNAPSHOT ${{ secrets.DOCKER_USERNAME }}/api-gateway:${{github.run_id}}
          docker tag ${{ secrets.DOCKER_USERNAME }}/api-gateway:0.0.1-SNAPSHOT ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest
          docker tag ${{ secrets.DOCKER_USERNAME }}/pessoa:latest ${{ secrets.DOCKER_USERNAME }}/pessoa:${{github.run_id}}
          docker tag ${{ secrets.DOCKER_USERNAME }}/book:latest ${{ secrets.DOCKER_USERNAME }}/book:${{github.run_id}}
          docker tag ${{ secrets.DOCKER_USERNAME }}/multa:latest ${{ secrets.DOCKER_USERNAME }}/multa:${{github.run_id}}
          docker tag ${{ secrets.DOCKER_USERNAME }}/clientes.springboot:latest ${{ secrets.DOCKER_USERNAME }}/clientes.springboot:${{github.run_id}}
          docker tag ${{ secrets.DOCKER_USERNAME }}/aluguel:latest ${{ secrets.DOCKER_USERNAME }}/aluguel:${{github.run_id}}
          docker push ${{ secrets.DOCKER_USERNAME }}/naming-server:${{github.run_id}}
          docker push ${{ secrets.DOCKER_USERNAME }}/naming-server:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway:${{github.run_id}}
          docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/pessoa:${{github.run_id}}
          docker push ${{ secrets.DOCKER_USERNAME }}/pessoa:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/book:${{github.run_id}}
          docker push ${{ secrets.DOCKER_USERNAME }}/book:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/multa:${{github.run_id}}
          docker push ${{ secrets.DOCKER_USERNAME }}/multa:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/clientes.springboot:${{github.run_id}}
          docker push ${{ secrets.DOCKER_USERNAME }}/clientes.springboot:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/aluguel:${{github.run_id}}
          docker push ${{ secrets.DOCKER_USERNAME }}/aluguel:latest
  deploy:
    needs: build
    runs-on: self-hosted
    steps:
        - name: Log in to Docker Hub
          run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

        - name: Deploy naming-server
          run: |
            docker pull rodrigodocker158/naming-server:0.0.1-SNAPSHOT
            docker rm -f naming-server || true
            docker run -d -p 8761:8761 --name naming-server rodrigodocker158/naming-server:latest
        - name: Deploy api-gateway
          run: |
            docker pull rodrigodocker158/api-gateway:0.0.1-SNAPSHOT
            docker rm -f api-gateway || true
            docker run -d -p 8765:8765 \
              -e EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://naming-server:8761/eureka \
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
              --name api-gateway \
              rodrigodocker158/api-gateway:latest
        - name: Deploy pessoa-db
          run: |
            docker pull postgres:13
            docker rm -f pessoa-db || true
            docker run -d \
              -e POSTGRES_USER=postgres \
              -e POSTGRES_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
              -e POSTGRES_DB=pessoa \
              --name pessoa-db \
              -v pessoa-db-data:/var/lib/postgresql/data \
              postgres:13
        - name: Deploy multa-db
          run: |
            docker pull postgres:13
            docker rm -f multa-db || true
            docker run -d \
              -e POSTGRES_USER=postgres \
              -e POSTGRES_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
              -e POSTGRES_DB=multa \
              --name multa-db \
              -v multa-db-data:/var/lib/postgresql/data \
              postgres:13
        - name: Deploy cliente-db
          run: |
            docker pull postgres:13
            docker rm -f cliente-db || true
            docker run -d \
              -e POSTGRES_USER=postgres \
              -e POSTGRES_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
              -e POSTGRES_DB=usuarios_microservicos \
              --name cliente-db \
              -v cliente-db-data:/var/lib/postgresql/data \
              postgres:13
        - name: Deploy livro-db
          run: |
            docker pull postgres:13
            docker rm -f livro-db || true
            docker run -d \
              -e POSTGRES_USER=postgres \
              -e POSTGRES_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
              -e POSTGRES_DB=livro \
              --name livro-db \
              -v livro-db-data:/var/lib/postgresql/data \
              postgres:13
        - name: Deploy aluguel-db
          run: |
            docker pull postgres:13
            docker rm -f aluguel-db || true
            docker run -d \
              -e POSTGRES_USER=postgres \
              -e POSTGRES_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
              -e POSTGRES_DB=aluguel \
              --name aluguel-db \
              -v aluguel-db-data:/var/lib/postgresql/data \
              postgres:13
        - name: Deploy pessoa
          run: |
            docker pull rodrigodocker158/pessoa:latest
            docker rm -f pessoa || true
            docker run -d -p 8700:8700 \
              -e SPRING_DATASOURCE_URL=jdbc:postgresql://pessoa-db:5432/pessoa \
              -e SPRING_DATASOURCE_USERNAME=postgres \
              -e SPRING_DATASOURCE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
              -e EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://naming-server:8761/eureka \
              --name pessoa \
              rodrigodocker158/pessoa:latest
        - name: Deploy multa
          run: |
            docker pull rodrigodocker158/multa:latest
            docker rm -f multa || true
            docker run -d -p 9000:9000 \
              -e SPRING_DATASOURCE_URL=jdbc:postgresql://multa-db:5432/multa \
              -e SPRING_DATASOURCE_USERNAME=postgres \
              -e SPRING_DATASOURCE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
              -e EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://naming-server:8761/eureka \
              --name multa \
              rodrigodocker158/multa:latest
        - name: Deploy cliente
          run: |
            docker pull rodrigodocker158/clientes.springboot:latest
            docker rm -f cliente || true
            docker run -d -p 8200:8200 \
              -e SPRING_DATASOURCE_URL=jdbc:postgresql://cliente-db:5432/usuarios_microservicos \
              -e SPRING_DATASOURCE_USERNAME=postgres \
              -e SPRING_DATASOURCE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
              -e EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://naming-server:8761/eureka \
              -e SECURITY_JWT_TOKEN_SECRET_KEY=${{ secrets.JWT_SECRET }} \
              --name cliente \
              rodrigodocker158/clientes.springboot:latest
        - name: Deploy book
          run: |
            docker pull rodrigodocker158/book:latest
            docker rm -f book || true
            docker run -d -p 8000:8000 \
              -e SPRING_DATASOURCE_URL=jdbc:postgresql://livro-db:5432/livro \
              -e SPRING_DATASOURCE_USERNAME=postgres \
              -e SPRING_DATASOURCE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
              -e EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://naming-server:8761/eureka \
              --name book \
              rodrigodocker158/book:latest
        - name: Deploy aluguel
          run: |
            docker pull rodrigodocker158/aluguel:latest
            docker rm -f aluguel || true
            docker run -d -p 8100:8100 \
              -e SPRING_DATASOURCE_URL=jdbc:postgresql://aluguel-db:5432/aluguel \
              -e SPRING_DATASOURCE_USERNAME=postgres \
              -e SPRING_DATASOURCE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
              -e EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://naming-server:8761/eureka \
              --name aluguel \
              rodrigodocker158/aluguel:latest
